/// <amd-module name='File/Driver/URL' />
import BlobDriver from 'File/Driver/Blob';
import { FileDriver, FileParams } from 'File/Driver/Interface';
import ContentDisposition from 'File/utils/ContentDisposition';
import { detection } from 'Env/Env';
// @ts-ignore
import FetchAPI = require('Transport/fetch');
import windowOpen from 'File/utils/windowOpen';
/** Файловый драйвер для скачивания файлов по URL */
export default class URLDriver implements FileDriver /** @lends File/Driver/URL */ {

    /**
     * @param {Strign} url URL файла
     */
    constructor(private url: string) { }

    public download(fileParams?: FileParams): Promise<Response | void | Error> {
        if (detection.isMobilePlatform) {
            windowOpen(this.url, {
                header: 'Невозможно скачать файл',
                body: 'Всплывающие окна заблокированы, поэтому скачать файл невозможно.'
            }, '_self');
            return Promise.resolve();
        }
        return FetchAPI({
            credentials: 'same-origin', // в Edge, Chrome(XP) по-умолчанию не 'same-origin'
            url: this.url,
        }).then((res: Response) => {
            const content = new ContentDisposition(res.headers.get('content-disposition'));
            const headerParams: FileParams = {
                name: content.filename,
                contentType: content.type,
            }
            Object.assign(headerParams, fileParams);
            if (detection.yandex) {
                /**
                 * Загрузка файлов происходит через сохранение blob-файла.
                 * Яндекс.Браузер открывает blob-файл для редактирования.
                 * Поэтому, если Яндекс.Браузер, скачиваем файл через скрытый iframe.
                 * https://online.sbis.ru/opendoc.html?guid=30c3d2c3-a41f-4382-b43c-a878f9e42fe4
                 */
                return import('File/utils/htmlDownloader').then((dowloader) => dowloader.downloadByIframe(this.url))
            }
            new BlobDriver(res.blob()).download(headerParams);
            return res;
        });
    }
}
