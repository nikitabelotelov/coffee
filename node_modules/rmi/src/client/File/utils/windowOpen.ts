/// <amd-module name='File/utils/windowOpen' />
// @ts-ignore
import OverlayController from 'PopupNotifications/utils/Overlay/Controller';
// @ts-ignore
import { IOverlayMessage } from 'PopupNotifications/utils/Overlay/Interface';
/** Предупреждение по-умолчанию */
const defaultOverlayMessage: IOverlayMessage = {
    header: 'Невозможно открыть всплывающее окно',
    body: 'Похоже, что всплывающие окна запрещены в настройках браузера'
};
// tslint:disable:max-line-length
/**
 * Функция для открытия ссылки в всплывающем окне
 * В случае, если всплывающие окна заблокированы, кидает предупреждение
 * @author Ибрагимов А.А
 * @param {string} url URL для загрузки в новое окно
 * @param {IOverlayMessage} warnMessage overlay-сообщение (отображается в случае, если всплывающие окна заблокированы)
 * @param {string} name Имя нового окна
 * @param {Array.<string>} params Параметры окна
 * @example
 * <pre class="brush: js">
 *  require(['File/utils/windowOpen'], (windowOpen) => {
 *      windowOpen.default('/', {
 *          header: 'Заголовок',
 *          body: 'Сообщение'
 *      }, 'example', 'width=300,height=300');
 *  })
 * </pre>
 */
const windowOpenClient = (url: string, warnMessage: IOverlayMessage = defaultOverlayMessage, name?: string, params?: string): void => {
    const popupWindow: Window = window.open(url, name, params);
    if (!popupWindow || popupWindow.closed === void 0) {
        OverlayController.show(warnMessage);
    }
}
/** Версия для СП */
const windowOpenPS = () => void 0;
export default (window === void 0) ? windowOpenPS : windowOpenClient;
