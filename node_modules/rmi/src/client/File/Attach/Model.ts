/// <amd-module name="File/Attach/Model" />
// @ts-ignore
import { Model as DataModel } from "Types/entity";
// @ts-ignore
import { register } from "Types/di";
import { IResource } from "File/IResource";
import { IFileModel } from "File/Attach/IModel";

/**
 * Модуль с результатом загрузки ресурса на сервис
 * @class
 * @name File/Attach/Model
 * @extends Types/entity.Model
 * @public
 * @author Заляев А.В.
 */
class Model extends DataModel implements IFileModel{
    /**
     * @cfg {File/IResource} Загружаемый ресурс
     * @name File/Attach/Model#origin
     */
    _$origin = null;
    constructor(options) {
        // @ts-ignore
        super(options);
        if (!options.origin) {
            throw new Error('argument "origin" in required');
        }
        this._$origin = options.origin;
    };

    /**
     * Возвращает оригинал загружаемого ресурса
     * @name File/Attach/Model#getOrigin
     * @return {File/IResource}
     */
    getOrigin(): IResource {
       return this._$origin;
    };

    /**
     * Возвращает имя загружаемого ресурса
     * @name File/Attach/Model#getName
     * @return {String}
     */
    getName(): string {
        return this._$origin.getName();
    }
}

register('file.model', Model);

export = Model;
