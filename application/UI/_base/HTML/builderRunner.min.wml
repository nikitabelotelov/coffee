define("wml!UI/_base/HTML/builderRunner",["View/Executor/TClosure"],function(f){function e(){debugger}var t=Array.prototype.slice.call(arguments),a=function e(t,a,r,n,o){var i=0,p=0,d=a&&a.key||"_",u={id:[],def:void 0},c=f.configResolver.calcParent(this,"undefined"===typeof currentPropertyName?void 0:currentPropertyName,t),s=f.getMarkupGenerator(n);try{var l=s.joinElements([s.createTag("div",{attributes:{},events:"undefined"===typeof window?{}:{},key:d+"0_"},[s.createTag("script",{attributes:{},events:"undefined"===typeof window?{}:{},key:d+"undefined"},[s.createText(" window.receivedStates = '{\"ThemesController\": { \"themes\" : {\"' + (window.defaultStaticTheme || 'default') + '\": true}}}'; require(['UI/Index', 'Core/app-start', 'View/Request', 'Core/app-init', 'View/Executor/TClosure'], function(UI, AppStart, Request, appInit, Core) { var AppData = UI.AppData, HeadData = UI.HeadData, Core = UI.Control;  appInit(); var headData = new HeadData([], true); Request.getCurrent().setStorage('HeadData', headData); window.startContextData = {AppData: new AppData({})}; require([ "+f.wrapUndef(f.Sanitize.apply(void 0,[f.getDecorators()["unescape"].apply(void 0,[f.getter(t,["_options","dependencies"])])]))+" ], function (){ var templateFn = "+f.wrapUndef(f.Sanitize.apply(void 0,[f.getDecorators()["unescape"].apply(void 0,[f.getter(t,["_options","builder"])])]))+"; templateFn.stable = true; var cnt = Core.extend({ _template: templateFn }); AppStart._shouldStart = false; AppStart.createControl(cnt, {}, document.getElementById('root')); }); }); ",d+"NaN_")],a?{context:a.context,key:d+"undefined"}:{},u,c)],a,u,c)],d,u);if(u.def)l=s.chain(l,u,a),u=void 0}catch(e){f.templateError("undefined",e,t)}return l||s.createText("")};return a.stable=true,a});