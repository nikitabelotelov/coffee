define("Types/_entity/adapter/RecordSetTable",["require","exports","tslib","Types/_entity/DestroyableMixin","Types/_entity/adapter/GenericFormatMixin","Types/di","Types/util"],function(t,a,i,e,r,o,d){"use strict";Object.defineProperty(a,"__esModule",{value:true});var s=function(e){function t(t){var a=this;if(t&&!t["[Types/_collection/RecordSet]"])throw new TypeError('Argument "data" should be an instance of Types/collection:RecordSet');return a=e.call(this,t)||this,r.default.constructor.call(a,t),a}return i.__extends(t,e),t.prototype.getFields=function(){var a=[];if(this._isValidData())this._data.getFormat().each(function(t){a.push(t.getName())});return a},t.prototype.getCount=function(){return this._isValidData()?this._data.getCount():0},t.prototype.add=function(t,a){this._buildData(t),this._data.add(t,a)},t.prototype.at=function(t){return this._isValidData()?this._data.at(t):void 0},t.prototype.remove=function(t){if(!this._isValidData())throw new TypeError("Passed data has invalid format");return this._data.removeAt(t)},t.prototype.replace=function(t,a){if(!this._isValidData())throw new TypeError("Passed data has invalid format");return this._data.replace(t,a)},t.prototype.move=function(t,a){if(!this._isValidData())throw new TypeError("Passed data has invalid format");var e=this._data.at(t);this._data.removeAt(t),this._data.add(e,a)},t.prototype.merge=function(t,a,e){if(!this._isValidData())throw new TypeError("Passed data has invalid format");var i=this._data.at(t);this._data.at(a).each(function(t,a){if(t!==e)i.set(t,a)},this),this._data.removeAt(a)},t.prototype.copy=function(t){if(!this._isValidData())throw new TypeError("Passed data has invalid format");var a=this._data.at(t).clone();return this.add(a,1+t),a},t.prototype.clear=function(){if(!this._isValidData())throw new TypeError("Passed data has invalid format");for(var t,a=this._data.getCount()-1;a>=0;a--)this._data.removeAt(a)},t.prototype.addField=function(t,a){if(!this._isValidData())throw new TypeError("Passed data has invalid format");this._data.addField(t,a)},t.prototype.removeField=function(t){if(!this._isValidData())throw new TypeError("Passed data has invalid format");this._data.removeField(t)},t.prototype.removeFieldAt=function(t){if(!this._isValidData())throw new TypeError("Passed data has invalid format");this._data.removeFieldAt(t)},t.prototype._buildData=function(t){if(!this._data){var a={};if(t){if(t.getAdapter)a.adapter=t.getAdapter();if(t.getIdProperty)a.idProperty=t.getIdProperty()}this._data=o.create("Types/collection:RecordSet",a)}},t.prototype._isValidData=function(){return this._data&&this._data["[Types/_collection/RecordSet]"]},t.prototype._getFieldsFormat=function(){return this._data.getFormat()},t}(d.mixin(e.default,r.default));a.default=s,Object.assign(s.prototype,{"[Types/_entity/adapter/RecordSetTable]":true,"[Types/_entity/adapter/ITable]":true,_data:null})});