define("Types/_entity/adapter/JsonFormatMixin",["require","exports","Types/_entity/format"],function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:true});var r={"[Types/_entity/adapter/GenericFormatMixin]":true,_format:null,constructor:function(){this._format={}},getFormat:function(t){if(!this._has(t))throw new ReferenceError(this._moduleName+'::getFormat(): field "'+t+"\" doesn't exist");if(!this._format.hasOwnProperty(t))this._format[t]=this._buildFormat(t);return this._format[t]},getSharedFormat:function(t){if(null===this._sharedFieldFormat)this._sharedFieldFormat=new i.UniversalField;var e=this._sharedFieldFormat;if(e.name=t,this._format.hasOwnProperty(t))e.type=this.getFormat(t).getType(),e.meta=this._getFieldMeta(t);else e.type="String";return e},addField:function(t){if(!t||!(t instanceof i.Field))throw new TypeError(this._moduleName+"::addField(): format should be an instance of Types/entity:format.Field");var e=t.getName();if(!e)throw new Error(this._moduleName+"::addField(): field name is empty");this._touchData(),this._format[e]=t},removeField:function(t){if(!this._has(t))throw new ReferenceError(this._moduleName+'::removeField(): field "'+t+"\" doesn't exist");this._touchData(),delete this._format[t]},removeFieldAt:function(){throw new Error("Method "+this._moduleName+"::removeFieldAt() doesn't supported")},_touchData:function(){if(!(this._data instanceof Object))this._data={}},_isValidData:function(){return this._data instanceof Object},_has:function(){throw new Error("Method must be implemented")},_buildFormat:function(t){return i.fieldsFactory({name:t,type:"string"})}};e.default=r});