define("Types/_source/DataMixin",["require","exports","Types/entity","Types/di"],function(t,e,r,a){"use strict";Object.defineProperty(e,"__esModule",{value:true});var i={"[Types/_source/DataMixin]":true,_$adapter:"Types/entity:adapter.Json",_$model:"Types/entity:Model",_$listModule:"Types/collection:RecordSet",_$idProperty:"",_dataSetModule:"Types/source:DataSet",_dataSetItemsProperty:"",_dataSetMetaProperty:"",_writable:r.ReadWriteMixin.writable,constructor:function(t){if((t=t||{}).dataSetMetaProperty)this._dataSetMetaProperty=t.dataSetMetaProperty},getAdapter:function(){if("string"===typeof this._$adapter)this._$adapter=a.create(this._$adapter);return this._$adapter},setAdapter:function(){throw new Error(this._moduleName+'::setAdapter() - method has been removed in 3.17.300 as deprecated. You should inject adapter into constructor use "adapter" option.')},getModel:function(){return this._$model},setModel:function(t){this._$model=t},getListModule:function(){return this._$listModule},setListModule:function(t){this._$listModule=t},getIdProperty:function(){return this._$idProperty},setIdProperty:function(t){this._$idProperty=t},_getIdPropertyByData:function(t){return this.getAdapter().getKeyField(t)||""},_getModelInstance:function(t){return a.create(this._$model,{writable:this._writable,rawData:t,adapter:this.getAdapter(),idProperty:this.getIdProperty()})},_getDataSetInstance:function(t){return a.create(this._dataSetModule,Object.assign({writable:this._writable,adapter:this.getAdapter(),model:this.getModel(),listModule:this.getListModule(),idProperty:this.getIdProperty()||this._getIdPropertyByData(t.rawData||null)},t))},_wrapToDataSet:function(t){return this._getDataSetInstance({rawData:t,itemsProperty:this._dataSetItemsProperty,metaProperty:this._dataSetMetaProperty})},_each:function(t,e,r){for(var a=this.getAdapter().forTable(t),i=0,o=a.getCount();i<o;i++)e.call(r||this,a.at(i),i)},isModelInstance:function(t){return t&&t["[Types/_entity/IObject]"]&&t["[Types/_entity/FormattableMixin]"]},isListInstance:function(t){return t&&t["[Types/_collection/IList]"]&&t["[Types/_entity/FormattableMixin]"]}};e.default=i});