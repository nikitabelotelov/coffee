define("Browser/_Event/Server/worker/subscribe-controller",["require","exports","Browser/_Event/Server/worker/subscribe","Browser/_Event/Server/native/HashedCounter"],function(e,t,n,s){"use strict";Object.defineProperty(t,"__esModule",{value:true});var r=function(){function e(){this.ports=new Map}return e.prototype.getHash=function(e){var t=this.ports.get(e);if(!t)t=Math.random().toFixed(10).substr(2),this.ports.set(e,t);return t},e}();t.PortHasher=r;var o=function(){function e(){this.portHasher=new r,this.common=new s.HashedCounter(false),this.channeled=new s.HashedCounter,this.ports=[]}return e.prototype.register=function(e,t){var r=new n.Subscribe(e,t,this.portHasher.getHash(t));if(this.common.add(r),-1==this.ports.indexOf(t))this.ports.push(t)},e.prototype.registerChanneled=function(e,t,r){var o=new n.Subscribe(e,t,this.portHasher.getHash(t),true,r);if(this.channeled.add(o),-1==this.ports.indexOf(t))this.ports.push(t)},e.prototype.unregisterChanneled=function(e,t,r){var o=new n.Subscribe(e,t,this.portHasher.getHash(t),true,r);this.channeled.remove(o)},e.prototype.get=function(e){return this.common.getByName(e).concat(this.channeled.getByName(e))},e.prototype.getPorts=function(){return this.ports},e.prototype.hasChanneled=function(e,t){for(var r,o=0,n=this.channeled.getByName(e);o<n.length;o++){var s;if(n[o].person===t)return true}return false},e.prototype.removePort=function(e){var t=this.ports.indexOf(e);if(-1===t)return;this.removeByPort(e,this.common),this.removeByPort(e,this.channeled),this.ports.splice(t,1)},e.prototype.removeByPort=function(t,e){for(var r,o=0,n=e.getSubscribes().filter(function(e){return e.port===t});o<n.length;o++)for(var s=n[o],i=e.getCount(s),h=0;h<i;h++)e.remove(s)},e.prototype.clear=function(){var r=this,o=[];return this.channeled.getSubscribes().forEach(function(e){for(var t=0;t<r.common.getCount(e);t++)o.push(e)}),o=this.common.getSubscribes().concat(o),this.common=new s.HashedCounter(false),this.channeled=new s.HashedCounter,this.ports=[],o},e}();t.SubscribeController=o});