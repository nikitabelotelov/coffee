define("Coffee/Data/DataStore",["require","exports"],function(e,t){Object.defineProperty(t,"__esModule",{value:true});var s={"Группа 1":"currentGroup1P","Группа 2":"currentGroup2P","Пар":"tParReceived"},n={socket:null,messageHandlers:new Array,initialSettings:null,_parseInfo:function(e,t){var n={};for(var s in t)n[s]={},n[s].value=e[t[s]],n[s].dataFieldName=t[s];return n},initDataStore:function(){var n=this;return new Promise(function(e,t){n.socket=new WebSocket("ws://localhost:8080"),n.socket.onopen=function(){console.log("Соединение установлено."),e()},n.socket.onclose=function(e){if(e.wasClean)console.log("Соединение закрыто чисто");else console.log("Обрыв соединения");console.log("Код: "+e.code+" причина: "+e.reason)},n.socket.onmessage=function(e){n._handleMessage(e.data),console.log("Получены данные "+e.data)},n.socket.onerror=function(e){console.log("Ошибка "+e.message),t()}})},on:function(e,t){this.messageHandlers[e]=t},removeHandler:function(e){this.messageHandlers[e]=null},_handleMessage:function(e){var t=JSON.parse(e),n=t.data;if(t.type){switch(t.type){case"initialSettings":this.initialSettings=n;break;case"currentInfoUpdate":n=this._parseInfo(n,s)}if(this.messageHandlers[t.type])this.messageHandlers[t.type].call(this,n)}},getInitialSettings:function(){return this.initialSettings},sendSettings:function(e){if(!this.socket)return null;var t=e.serialize();this.socket.send(JSON.stringify({type:"newSettings",data:t}))},closeConnection:function(){this.socket.close()}};return t.DataStore=n,t});