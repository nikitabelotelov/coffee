define("Core/core-merge",["require","exports"],function(e,r){"use strict";function c(e){return e&&(e.constructor===Object&&!("$constructor"in e)||e.constructor===Array)}function f(e,r,o,t,n){if("object"===typeof r[o]&&null!==r[o]&&t.clone)if(c(r[o]))e[o]=l(r[o]instanceof Array?[]:{},r[o],t,o,n);else e[o]=r[o];else if(!(null===r[o]&&t.noOverrideByNull))e[o]=r[o]}function l(e,r,o,t,n){if(void 0===o)o={};if(o.preferSource=void 0!==o.preferSource?o.preferSource:false,o.rec=void 0!==o.rec?o.rec:true,o.clone=void 0!==o.clone?o.clone:false,o.create=void 0!==o.create?o.create:true,o.noOverrideByNull=void 0!==o.noOverrideByNull?o.noOverrideByNull:false,r instanceof Date){if(o.clone)return new Date(r);return e=r}if(!n)n=n||{keys:[],objects:[]};if("object"===typeof e&&null!==e&&"object"===typeof r&&null!==r){if(n.keys.push(void 0===t?".":t),n.objects.indexOf(r)>-1)throw new Error('Recursive traversal detected for path "'+n.keys.join(" -> ")+'" with '+r);for(var i in n.objects.push(r),r){if(!r.hasOwnProperty(i))continue;if(o.ignoreRegExp&&o.ignoreRegExp.test(i))continue;if(void 0===e[i]){if(o.create)if(null===r[i])e[i]=null;else f(e,r,i,o,n)}else if(!o.preferSource)if(e[i]&&"object"===typeof e[i]&&"object"===typeof r[i]){if(e[i]instanceof Date)if(r[i]instanceof Date){if(o.clone)e[i]=new Date(+r[i]);else e[i]=r[i];continue}else e[i]=r[i]instanceof Array?[]:{};else if(r[i]instanceof Date){if(o.clone)e[i]=new Date(+r[i]);else e[i]=r[i];continue}if(o.rec&&(c(r[i])||null===r[i])&&Object.keys(e[i]).length>0)e[i]=l(e[i],r[i],o,i,n);else e[i]=r[i]}else f(e,r,i,o,n);else if("object"===typeof e[i]&&"object"===typeof r[i]&&o.rec)if(c(r[i])||null===r[i])e[i]=l(e[i],r[i],o,i,n)}n.keys.pop(),n.objects.pop()}else if(!(null===r&&o.noOverrideByNull)&&!o.preferSource)e=r;return e}return l});