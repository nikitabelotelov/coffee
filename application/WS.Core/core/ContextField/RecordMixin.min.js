define("Core/ContextField/RecordMixin",["Types/shim","Types/collection","Core/Context"],function(e,s,a){"use strict";var t,u=new(0,e.Map),c=0,g=function(){var i=[];u.forEach(function(e,t){i.push([t,e])}),u.clear(),i.forEach(function(e){var t=e[0],i=e[1];if(t["[Data/_entity/IObject]"])t.set(i);else Object.keys(i).forEach(function(e){t.set(e,i[e])})})},h={"[Core/ContextField/RecordMixin]":true,get:function(e,t){var i,n,r,l,f;if(0===t.length)return e;if(i=t[0],n=false,c>0&&u.has(e))if(i in(f=u.get(e)))r=f[i],n=true;if(!n)r=e.get(i);if(void 0===r)return a.NonExistentValue;return(l=a.getValueType(r)).get(r,t.slice(1))},setWillChange:function(e,t,i){var n,r,l,f;if(0===t.length)return e!==i;if(l=t[0],r=e.get(l),e.getOwner&&e.getOwner()&&e.getOwner()instanceof s.RecordSet)n=void 0!==r;else n=r!==i;if(n)n=(f=a.getValueType(r)).setWillChange(r,t.slice(1),i);return n},set:function(e,t,i){var n,r,l,f,s;if(0===t.length)return i;if(f=t[0],void 0!==(r=e.get(f)))if(1===t.length){var o;if(u.has(e))o=u.get(e);else o={};o[f]=i,u.set(e,o),n=e}else if(r===(l=(s=a.getValueType(r)).set(r,t.slice(1),i)))n=e;else n=h.set(e,[f],l);else if(void 0===r&&1===t.length){if(e.has(f))e.set(f,i);else this._module.addFieldTo(e,f,i);n=e}if(0===c)g();return n},transaction:function(){if(0===c)u.clear();c++},commit:function(){if(0===--c)g()},remove:function(e,t){var i,n,r,l,f;if(f=0!==t.length)if(i=t[0],f=e.has(i))if(n=e.get(i),f=1===t.length){if(f=null!==n)e.set(i,null)}else if(f=(l=(r=a.getValueType(n)).remove(n,t.slice(1))).changed)e.set(i,l.value);return{value:e,changed:f}}};return h});