define("Core/pathResolver",["require","exports","Core/constants"],function(e,r,u){"use strict";var t=function(){return this||(0,eval)("this")}(),s={js:0,css:0,html:0,tmpl:0,wml:0,tmplstr:0,json:0,dpack:0,xml:0},l=/[a-z]+:\/{2}/i,f=/^\//,a=/\.js$/,c=/(\w|\.)+(\?.*)?$/,j=/(\w|\.)+\.module\.js(\?.*)?$/,h=/(\.module\.js|\.js)(\?.*)?$/;function p(e){return[e,e+".module.js"].join("/")}function d(t,e,r){var s="",o,i=function(e){if(t in u.jsCoreModules)e=u.wsRoot+u.jsCoreModules[t];return e},n=function(e){if(t in u.jsModules){var r=u.jsModules[t];if(r)if("/"===r.charAt(0)||l.test(r)||":"===r.charAt(1))e=r;else e=u.resourceRoot+r;else e=u.resourceRoot+p(t)}return e};if(true)s=n(s);else if(!(s=i(s)))s=n(s);return s}function o(e){var r=e.split("/"),t=r.shift(),s=u.requirejsPaths&&u.requirejsPaths[t]?"/"+u.requirejsPaths[t]+"/":d(t).replace(/\/[^\/]*$/,"/");if(!s)return"";return s+r.join("/")}function i(e,r,t){var s,o;if("html"===r)o=".xhtml";else o="."+r;if(e.indexOf("/")>-1){var i=e.split("/"),n;if(s=d(i.shift(),r,t))if(s.search(j)>-1)s=s.replace(j,i.join("/")+o+"$2");else s=s.replace(c,i.join("/")+o+"$2");else{var l=new RegExp("\\"+o+"$");s=e+("js"===r||l.test(e)?"":o)}}else{if(!(s=d(e,r,t)))throw new Error("Module "+e+" is not defined");if("js"!==r)s=s.replace(h,o+"$2")}if(u.isNodePlatform)s=s.replace(f,"").replace(a,"");return s}var n=function(e,r,t){if(!(r in s))throw new ReferenceError("Plugin "+r+" is not supported by Core/pathResolver");return i(e,r,t)};return n.resolveModulePath=p,n.resolveModule=d,n.resolveComponentPath=o,n});