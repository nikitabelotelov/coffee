define("Transport/fetch",["require","exports","tslib","Core/detection","Transport/Errors","Transport/_utils"],function(e,n,l,t,w,h){"use strict";var E={method:"GET",url:""},T=2e3,r=600,m=false,o=false,i,v=function(e){return o||300==e||405==e},R=function(e){return e>=200&&e<300||304===e},b=function(e){return"AbortError"==e.name},p=function(e,n){var t=true;return n.forEach(function(e,n){t=false}),0===e&&t},u;return function(){if("undefined"===typeof window)return;if(t.firefox)window.addEventListener("beforeunload",function(){m=true,setTimeout(function(){m=false},r)});else window.addEventListener("unload",function(){m=true});window.addEventListener("online",function(){o=false}),window.addEventListener("offline",function(){o=true})}(),function(e){var n=l.__assign({},E,e),i=n.url,t=n.method,r=n.body,o=n.headers,u=n.credentials,f=n.cache,a=n.redirect,s=n.mode,d=new AbortController,c=fetch(i,{method:t,headers:o,redirect:a,mode:s,body:r,credentials:u,cache:f,signal:d.signal}).then(function(e){var n=e.status,t=e.statusText,r=e.headers;if(R(n))return e;if(401==n)throw new w.Auth(i);if(v(n)||p(n,r))throw new w.Connection(i);var o=w.ERROR_TEXT[n]||w.ERROR_TEXT[t]||w.ERROR_TEXT.unknown;return e.text().then(function(e){throw new w.HTTP({url:i,message:o,payload:e,status:n})})},function(e){if(b(e)||m)throw new w.Abort(i);return h.delay(T).then(function(){if(v())throw new w.Connection(i);throw e})});return h.getAbortedPromise(c,d)}});